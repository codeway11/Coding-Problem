class Solution {
public:
    vector<int> twoSum(vector<int>& nums, int target) {
    // vector<int> v1;
    // int n=nums.size();
    // for(int i=0;i<n;i++)
    // {
    //     for(int j=i+1;j<n;j++)
    //     {
    //         if(nums[i]+nums[j]==target)
    //         {
    //             v1.push_back(i);
    //             v1.push_back(j);
    //             return v1;
    //         }
    //     }
    // }
    // return v1;
    // Time complexity:O(n^2)
        vector<pair<int,int>> v1;
        for(int i=0;i<nums.size();i++)
        {
            v1.push_back({nums[i],i});
        }
        sort(v1.begin(),v1.end());
        int i=0,j=nums.size()-1;
        vector<int> ans;
        while(i<j)
        {
            int sum=v1[i].first+v1[j].first;
            if(sum==target)
            {
                ans.push_back(v1[i].second);
                ans.push_back(v1[j].second);
                break;
            }
            if(sum>target)
            {
                j--;
            }else
            {
                i++;
            }
        }
        return ans;
        // Time complexity:O(nlogn)
        // Space complexity:O(n)
        
    }
};
